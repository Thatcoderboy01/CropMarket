generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fullname   String
  email      String    @unique
  password   String
  role       Role      @default(FARMER)
  isBlocked  Boolean   @default(false)
  createdAt  DateTime  @default(now())

  // Relations
  farmer     Farmer?
  retailer   Retailer?
}

model Farmer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String    @unique              // ✅ Required for 1:1 relation
  address    String
  latitude   Float
  longitude  Float

  // Relations
  user       User?     @relation(fields: [userId], references: [id])
  crops      Crop[]
}

model Retailer {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  userId       String    @unique              // ✅ Required for 1:1 relation
  companyName  String
  location     String

  // Relations
  user         User?     @relation(fields: [userId], references: [id])
  requests     Request[]
}

model Crop {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  farmerId  String
  name      String
  price     Float
  quantity  Int

  // Relations
  farmer    Farmer?    @relation(fields: [farmerId], references: [id])
  requests  Request[]
}

model Request {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  retailerId   String
  cropId       String
  priceOffered Float
  status       RequestStatus  @default(PENDING)

  // Relations
  retailer     Retailer?      @relation(fields: [retailerId], references: [id])
  crop         Crop?          @relation(fields: [cropId], references: [id])
}

model Setting {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  key    String   @unique
  value  String
}

enum Role {
  FARMER
  RETAILER
  ADMIN
  BLOCKED
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}